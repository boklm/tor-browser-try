#!/bin/bash
# vim: expandtab sw=4
set -e

basedir=$(dirname $0)
. "$basedir/common"
rebase_onto=
COMMIT=
while [ $# != 0 ]
do
    case "$1" in
        --rebase-onto=*)
            rebase_onto="${1#--rebase-onto=}"
            shift
            ;;
        *)
            [ -n "$COMMIT" ] && echo "Bad arguments" && exit 1
            COMMIT="$1"
            shift
            ;;
    esac
done
[ -z "$COMMIT" ] && echo "Missing argument" && exit 2

# trychooser: http://trychooser.pub.build.mozilla.org/
[ -z "$trychooser" ] &&
    trychooser='try: -b o -e -p linux,linux64,linux64-st-an,macosx64,win32 -u all -t all'

hg_clone() {
    lockfile "$lockdir/$hgrepo"
    local hg_dir="$MOZILLA_HG_DIR/$hgrepo"
    if ! [ -d "$hg_dir" ]
    then
        $hg clone -v "https://hg.mozilla.org/releases/$hgrepo" "$hg_dir"
    fi
    cd "$hg_dir"
}

hg_clean_mq() {
    $hg qpop --all
    for p in $($hg qunapplied)
    do
        $hg qdelete "$p"
    done
}

wget -O"$basedir/gecko-mapfile" https://people.mozilla.org/~asasaki/vcs2vcs/gecko-dev/gecko-mapfile
eval $($basedir/find-hg-parent-commit $COMMIT)
patches_dir=$(mktemp -d)
git format-patch -o "$patches_dir" "$ff_git_commit..$COMMIT"
hg_clone
hg_clean_mq
$hg pull
$hg update -C "$ff_hg_commit"
for patch in $(echo "$patches_dir"/* | sort)
do
    $hg qimport -g -P "$patch"
done
$hg qnew -m "$trychooser" trychooser
rm -Rf "$patches_dir"
[ -n "$rebase_onto" ] &&
    $hg rebase -d "$rebase_onto" -r qbase..qtip
date +%s > "$MOZILLA_HG_DIR/$hgrepo.changed"
rm -f "$lockdir/$hgrepo"
echo > "$inotifydir/$hgrepo"
